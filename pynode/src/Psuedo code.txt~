//algorithm for working out when a sensor is triggered
let PQUEUE be a priority queue where the element is a tuple of two nodes;
let USER_CREATED_BREAK_NODES be a list of tuples where the first element is the node and the second be the time;

let NODE_TIME_TUPLE be a tuple of nodes and times;
for each(NODE_TIME_TUPLE in USER_CREATED_BREAK_NODES)
{
	add each node from NODE_TIME_TUPLE to PQUEUE with a priority of time;
}

while(PQUEUE is not empty)
{
	//get the node which the wave will reach next
	let NODE and NODE_FROM be nodes;
	let WAVE_ARRIVE_TIME be a real number;
	WAVE_ARRIVE_TIME = PQUEUE.get_priortity_of_next_element();
	CURRENT_NODE, NODE_FROM = PQUEUE.dequeue();
	
	//for every node that connects to where the wave arived except the node if came from
	let EDGE be an edge;
	for each(EDGE in CURRENT_NODE edges except the edge from NODE_FROM)
	{
		let FUTURE_NODE be a node;
		FUTURE_NODE = other node from CURRENT_NODE along EDGE;
		
		let EDGE_TIME be a real number;
		EDGE_TIME = time taken to traverse EDGE;
		
		let FUTURE_TIME be a real number;
		FUTURE_TIME = WAVE_ARRIVE_TIME + EDGE_TIME;
		
		//add a node the wave will reach though this 
		PQUEUE.enqueue(element=(FUTURE_NODE, CURRENT_NODE), priority=FUTURE_TIME);
	}
}
